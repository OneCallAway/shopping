<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper中的namespace等于mapper的接口地址-->
<mapper namespace="mapper.OrdersMapperCustom">

        <!--订单查询关联用户的resultMap-->
        <!--将整个查询结果映射到po.Orders中-->
        <resultMap id="OrdersUserResultMap" type="po.Orders">
                <!--
                配置映射的订单信息
                id:指定查询类列中的唯一标识，订单信息中的唯一标识，如果有多个列组成唯一标识，配置多个id
                column：订单信息的惟一标识列
                property：订单信息的唯一标识列所映射到orders中那个属性
                -->
                <id column="id" property="id"/>
                <result column="user_id" property="userId"/>
                <result column="number" property="number"/>
                <result column="createtime" property="createtime"/>
                <result column="note" property="note"/>

                <!--配置映射的关联用户信息
                association:用于映射关联查询单个对象的信息
                property:将查询关联的用户信息映射到orders中的那个属性

                id：关联查询用户的唯一标识
                column：指定唯一标识用户信息的列
                javaType：映射到user的那个属性
                -->
                <association property="user" javaType="po.User">
                        <id column="user_id" property="id"/>
                        <result column="username" property="username"/>
                        <result column="sex" property="sex"/>
                        <result column="address" property="address"/>
                </association>
        </resultMap>


        <!--订单以及订单明细的resultMap
        使用继承,不用在该resultMap中配置订单信息和用户信息
        -->
        <resultMap id="OrderAndOrderDetailResultMap" type="po.Orders" extends="OrdersUserResultMap">
                <!--订单信息-->
                <!--<id column="id" property="id"/>-->
                <!--<result column="user_id" property="userId"/>-->
                <!--<result column="number" property="number"/>-->
                <!--<result column="createtime" property="createtime"/>-->
                <!--<result column="note" property="note"/>-->
                <!--用户信息-->
                <!--<association property="user" javaType="po.User">-->
                        <!--<id column="user_id" property="id"/>-->
                        <!--<result column="username" property="username"/>-->
                        <!--<result column="sex" property="sex"/>-->
                        <!--<result column="address" property="address"/>-->
                <!--</association>-->
                <!--订单明细信息
                一个订单查询到了多条明细,一对多关系,使用collection
                property:将关联的多条记录映射到orders中的那个属性
                ofType:指定映射到list集合属性中pojo的类型
                -->
                <collection property="orderdetails" ofType="po.Orderdetail">
                        <!--id:订单明细的唯一标识
                            property:将订单明细的唯一标识映射到OrderDetail的那个属性
                        -->
                        <id column="orderdetail_id" property="id"/>
                        <result column="items_id" property="itemsId"/>
                        <result column="items_num" property="itemsNum"/>
                        <result column="orders_id" property="ordersId"/>
                </collection>
        </resultMap>

        <!--查询用户以及购买的商品信息-->
        <resultMap id="UserAndItemsResult" type="po.User">
                <!--用户信息-->
                <id column="user_id" property="id"/>
                <result column="username" property="username"/>
                <result column="sex" property="sex"/>
                <result column="address" property="address"/>

                <!--订单信息-->
                <!--一个用户对应多个订单,一对多关系,使用clooection映射-->
                <collection property="ordersList" ofType="po.User">
                        <id column="id" property="id"/>
                        <result column="user_id" property="userId"/>
                        <result column="number" property="number"/>
                        <result column="createtime" property="createtime"/>
                        <result column="note" property="note"/>
                        <!--订单明细,一个订单包括多个明细-->
                        <collection property="orderdetails" ofType="po.Orderdetail">
                                <id column="orderdetail_id" property="id"/>
                                <result column="items_id" property="itemsId"/>
                                <result column="items_num" property="itemsNum"/>
                                <result column="orders_id" property="ordersId"/>

                                <!--商品信息,一个订单明细对应一个商品
                        association:用于映射关联查询单个对象的信息
                        property:将查询关联的用户信息映射到orders中的那个属性

                        id：关联查询用户的唯一标识
                        column：指定唯一标识用户信息的列
                        javaType：映射到user的那个属性
                        -->
                                <association property="items" javaType="po.Items">
                                        <id column="items_id" property="id"/>
                                        <result column="items_name" property="name"/>
                                        <result column="itmes_detail" property="detail"/>
                                        <result column="items_price" property="price"/>
                                </association>
                        </collection>
                </collection>
        </resultMap>

        <!--查询订单关联查询用户信息-->
        <select id="findOrdersUser" parameterType="" resultType="po.OrdersCustom">
                SELECT
                orders.*,
                user.username,
                user.sex,
                user.address
                FROM
                orders,
                user
                WHERE
                orders.user_id = user.id
        </select>

        <!--查询订单关联查询用户信息，用resultMap-->
        <select id="findOrdersUserResultMap" parameterType="" resultMap="OrdersUserResultMap">
                SELECT
                orders.*,
                user.username,
                user.sex,
                user.address
                FROM
                orders,
                user
                WHERE
                orders.user_id = user.id
        </select>

        <!--查询订单关联查询用户以及订单明细，使用resultMap-->
        <select id="findOrdersAndOrderDetailResultMap" resultMap="OrderAndOrderDetailResultMap">
                SELECT
                orders.*,
                user.username,
                user.sex,
                user.address,
                orderdetail.id or derdetail_id,
                orderdetail.items_id,
                orderdetail.items_num,
                orderdetail.orders_id
                FROM
                orders,
                user,
                orderdetail
                WHERE
                orders.user_id = user.id AND orderdetail.order_id = orders.id
        </select>

        <!--查询用户以及购买的商品信息,使用resultMap-->
        <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
                SELECT
                orders.*,
                user.username,
                user.sex,
                user.address,
                orderdetail.id orderdetail_id,
                orderdetail.items_id,
                orderdetail.items_num,
                orderdetail.orders_id,
                items.name items_name,
                items.detail itmes_detail,
                items.price items_price
                FROM
                orders,
                user,
                orderdetail,
                items
                WHERE
                orders.user_id = user.id AND orderdetail.order_id = orders.id AND orderdetail.items_id = items.id
        </select>

        <select id="findUserById" parameterType="int" resultType="user">
                SELECT * from student WHERE id = #{id}
        </select>

        <!--实现对用户信息延迟加载-->
        <resultMap id="OrdersUserLazyLoadingResultMap" type="po.Orders">
                <!--对订单信息进行映射配置-->
                <id column="id" property="id"/>
                <result column="user_id" property="userId"/>
                <result column="number" property="number"/>
                <result column="createtime" property="createtime"/>
                <result column="note" property="note"/>
                <!--对用户信息进行延迟加载
                select:指定延迟加载需要执行的statement的id(是根据user_id查询用户信息的statement)
                使用findUserById完成根据用户id(user_id)用户信息的查询,如果findUserById不再本mapper中,需要加上namespace
                column:订单信息中关联用户信息查询的列,user_id
                关联查询的sql:
                select * order.*,
                        (select username from user where orders.user_id = user.id)username,
                        (select sex from user where orders.user_id = user.id)sex
                        from orders
                -->
                <association property="user" javaType="po.User" select="findUserById" column="user_id">

                </association>
        </resultMap>
        
        <!--查询订单关联查询用户,用户信息需要延迟加载-->
        <select id="findOrdersUserLazyLoadingResultMap" resultMap="OrdersUserLazyLoadingResultMap">
                SELECT * FROM orders
        </select>
</mapper>

